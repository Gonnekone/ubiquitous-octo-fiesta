// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RefreshTokenProvider is an autogenerated mock type for the RefreshTokenProvider type
type RefreshTokenProvider struct {
	mock.Mock
}

// DeleteRefreshToken provides a mock function with given fields: ctx, guid
func (_m *RefreshTokenProvider) DeleteRefreshToken(ctx context.Context, guid string) error {
	ret := _m.Called(ctx, guid)

	if len(ret) == 0 {
		panic("no return value specified for DeleteRefreshToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, guid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetRefreshTokenHash provides a mock function with given fields: ctx, guid
func (_m *RefreshTokenProvider) GetRefreshTokenHash(ctx context.Context, guid string) (string, error) {
	ret := _m.Called(ctx, guid)

	if len(ret) == 0 {
		panic("no return value specified for GetRefreshTokenHash")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, guid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, guid)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, guid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveRefreshToken provides a mock function with given fields: ctx, guid, refreshToken
func (_m *RefreshTokenProvider) SaveRefreshToken(ctx context.Context, guid string, refreshToken string) error {
	ret := _m.Called(ctx, guid, refreshToken)

	if len(ret) == 0 {
		panic("no return value specified for SaveRefreshToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, guid, refreshToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRefreshTokenProvider creates a new instance of RefreshTokenProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRefreshTokenProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *RefreshTokenProvider {
	mock := &RefreshTokenProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
